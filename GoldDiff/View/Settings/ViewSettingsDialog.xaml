<flat:FlatDialog x:Class="GoldDiff.View.Settings.ViewSettingsDialog"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:local="clr-namespace:GoldDiff.View.Settings"
                 xmlns:flat="clr-namespace:FlatXaml.View;assembly=FlatXaml"
                 xmlns:resource="clr-namespace:GoldDiff.View.Resource"
                 xmlns:flatConverter="clr-namespace:FlatXaml.Converter;assembly=FlatXaml"
                 xmlns:markupExtension="clr-namespace:FlatXaml.MarkupExtension;assembly=FlatXaml"
                 xmlns:theme="clr-namespace:FlatXaml.Theme;assembly=FlatXaml"
                 xmlns:sharedTheme="clr-namespace:GoldDiff.Shared.View.SharedTheme;assembly=GoldDiff.Shared"
                 xmlns:sharedResource="clr-namespace:GoldDiff.Shared.View.SharedResource;assembly=GoldDiff.Shared"
                 mc:Ignorable="d"

                 x:Name="This">

    <Window.Resources>
        <flatConverter:EnumerationToStringConverter x:Key="ThemeTypeToStringConverter"
                                                    Enumeration="{x:Type sharedTheme:ThemeType}"
                                                    Localization="{x:Static sharedResource:ThemeTypeResources.ResourceManager}" />
        <flatConverter:EnumerationToStringConverter x:Key="DisplayGoldTypeToStringConverter"
                                                    Enumeration="{x:Type local:DisplayGoldType}"
                                                    Localization="{x:Static resource:DisplayGoldTypeResources.ResourceManager}" />
        <flatConverter:EnumerationToStringConverter x:Key="StayOnTopTypeToStringConverter"
                                                    Enumeration="{x:Type local:StayOnTopType}"
                                                    Localization="{x:Static resource:StayOnTopTypeResources.ResourceManager}" />
        <flatConverter:BoolToVisibilityConverter x:Key="TrueToVisible"
                                                 TrueValue="Visible"
                                                 FalseValue="Collapsed" />
    </Window.Resources>

    <StackPanel Orientation="Vertical">

        <!-- General Settings -->

        <flat:FlatGroupBox Margin="0, 0, 0, 0"
                           Header="{Binding Source={x:Static resource:ViewSettingsDialogResources.LabelAppearanceSettings}}">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" /> <!-- Theme -->
                </Grid.RowDefinitions>

                <!-- Theme -->

                <flat:FlatLabel Grid.Column="0"
                                Grid.Row="0"
                                Margin="0, 0, 0, 0"
                                Content="{Binding Source={x:Static resource:ViewSettingsDialogResources.LabelTheme}}"
                                Target="{Binding ElementName=SelectTheme}" />

                <StackPanel Grid.Column="1"
                            Grid.Row="0"
                            Margin="12, 0, 0, 0"
                            Orientation="Vertical">

                    <flat:FlatComboBox x:Name="SelectTheme"
                                       ItemsSource="{markupExtension:Enumeration Enumeration={x:Type sharedTheme:ThemeType}, Localization={x:Static sharedResource:ThemeTypeResources.ResourceManager}}"
                                       DataContext="{Binding Source={x:Static sharedTheme:ThemeSettings.Instance}}"
                                       SelectedItem="{Binding Theme, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ThemeTypeToStringConverter}}"
                                       SelectionChanged="SelectTheme_OnSelectionChanged" />

                    <TextBlock Margin="0, 6, 0, 0"
                               Foreground="{DynamicResource {x:Static theme:FlatThemeKeys.NegativeRegular}}"
                               FontSize="{DynamicResource {x:Static theme:FlatThemeKeys.FontSizeHint}}"
                               Text="{Binding Source={x:Static resource:ViewSettingsDialogResources.HintRestartIsRequired}}"
                               Visibility="{Binding ElementName=This, Path=ThemeHasBeenChanged, Converter={StaticResource TrueToVisible}}" />

                </StackPanel>

                <!-- /Theme -->

            </Grid>
        </flat:FlatGroupBox>

        <!-- /General Settings -->

        <!-- Gold Difference Window Settings -->

        <flat:FlatGroupBox Margin="0, 12, 0, 0"
                           Header="{Binding Source={x:Static resource:ViewSettingsDialogResources.LabelGoldDifferenceWindowSettings}}">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" /> <!-- Stay On Top -->
                    <RowDefinition Height="Auto" /> <!-- Gold Type -->
                    <RowDefinition Height="Auto" /> <!-- Display Player Stats -->
                    <RowDefinition Height="Auto" /> <!-- Display Unspent Player Stats -->
                    <RowDefinition Height="Auto" /> <!-- Display Team Stats -->
                    <RowDefinition Height="Auto" /> <!-- Display Unspent Team Stats -->
                    <RowDefinition Height="Auto" /> <!-- Display Inhibitor Respawn Timers -->
                </Grid.RowDefinitions>

                <!-- Stay On Top -->

                <flat:FlatLabel Grid.Column="0"
                                Grid.Row="0"
                                Margin="0, 0, 0, 0"
                                Content="{Binding Source={x:Static resource:ViewSettingsDialogResources.LabelStayOnTop}}"
                                Target="{Binding ElementName=SelectStayOnTop}" />

                <flat:FlatComboBox x:Name="SelectStayOnTop"
                                   Grid.Column="1"
                                   Grid.Row="0"
                                   Margin="12, 0, 0, 0"
                                   ItemsSource="{markupExtension:Enumeration Enumeration={x:Type local:StayOnTopType}, Localization={x:Static resource:StayOnTopTypeResources.ResourceManager}}"
                                   DataContext="{Binding Source={x:Static local:ViewSettings.Instance}}"
                                   SelectedItem="{Binding GoldDifferenceWindowStayOnTop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StayOnTopTypeToStringConverter}}" />

                <!-- /Stay On Top -->

                <!-- Gold Type -->

                <flat:FlatLabel Grid.Column="0"
                                Grid.Row="1"
                                Margin="0, 12, 0, 0"
                                Content="{Binding Source={x:Static resource:ViewSettingsDialogResources.LabelGoldType}}"
                                Target="{Binding ElementName=SelectGoldType}" />

                <flat:FlatComboBox x:Name="SelectGoldType"
                                   Grid.Column="1"
                                   Grid.Row="1"
                                   Margin="12, 12, 0, 0"
                                   ItemsSource="{markupExtension:Enumeration Enumeration={x:Type local:DisplayGoldType}, Localization={x:Static resource:DisplayGoldTypeResources.ResourceManager}}"
                                   DataContext="{Binding Source={x:Static local:ViewSettings.Instance}}"
                                   SelectedItem="{Binding DisplayGoldType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DisplayGoldTypeToStringConverter}}" />

                <!-- /Gold Type -->

                <!-- Display Player Scores -->

                <flat:FlatLabel Grid.Column="0"
                                Grid.Row="2"
                                Margin="0, 12, 0, 0"
                                Content="{Binding Source={x:Static resource:ViewSettingsDialogResources.LabelDisplayPlayerScores}}"
                                Target="{Binding ElementName=SelectDisplayPlayerStats}" />

                <flat:FlatIconCheckBox x:Name="SelectDisplayPlayerStats"
                                       Grid.Column="1"
                                       Grid.Row="2"
                                       Margin="12, 12, 0, 0"
                                       HorizontalAlignment="Left"
                                       DataContext="{Binding Source={x:Static local:ViewSettings.Instance}}"
                                       IsChecked="{Binding DisplayPlayerScores, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                
                <flat:FlatLabel Grid.Column="0"
                                Grid.Row="3"
                                Margin="0, 12, 0, 0"
                                Content="{Binding Source={x:Static resource:ViewSettingsDialogResources.LabelDisplayPlayerScoresSinceLastItemAcquisition}}"
                                Target="{Binding ElementName=SelectDisplayUnspentPlayerStats}" />

                <flat:FlatIconCheckBox x:Name="SelectDisplayUnspentPlayerStats"
                                       Grid.Column="1"
                                       Grid.Row="3"
                                       Margin="12, 12, 0, 0"
                                       HorizontalAlignment="Left"
                                       IsEnabled="{Binding ElementName=SelectDisplayPlayerStats, Path=IsChecked}"
                                       DataContext="{Binding Source={x:Static local:ViewSettings.Instance}}"
                                       IsChecked="{Binding DisplayPlayerScoresSinceLastItemAcquisition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <!-- /Display Player Scores -->
                
                <!-- Display Team Scores -->

                <flat:FlatLabel Grid.Column="0"
                                Grid.Row="4"
                                Margin="0, 12, 0, 0"
                                Content="{Binding Source={x:Static resource:ViewSettingsDialogResources.LabelDisplayTeamScores}}"
                                Target="{Binding ElementName=SelectDisplayTeamStats}" />

                <flat:FlatIconCheckBox x:Name="SelectDisplayTeamStats"
                                       Grid.Column="1"
                                       Grid.Row="4"
                                       Margin="12, 12, 0, 0"
                                       HorizontalAlignment="Left"
                                       DataContext="{Binding Source={x:Static local:ViewSettings.Instance}}"
                                       IsChecked="{Binding DisplayTeamScores, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                
                <flat:FlatLabel Grid.Column="0"
                                Grid.Row="5"
                                Margin="0, 12, 0, 0"
                                Content="{Binding Source={x:Static resource:ViewSettingsDialogResources.LabelDisplayTeamScoresSinceLastItemAcquisition}}"
                                Target="{Binding ElementName=SelectDisplayUnspentTeamStats}" />

                <flat:FlatIconCheckBox x:Name="SelectDisplayUnspentTeamStats"
                                       Grid.Column="1"
                                       Grid.Row="5"
                                       Margin="12, 12, 0, 0"
                                       HorizontalAlignment="Left"
                                       IsEnabled="{Binding ElementName=SelectDisplayTeamStats, Path=IsChecked}"
                                       DataContext="{Binding Source={x:Static local:ViewSettings.Instance}}"
                                       IsChecked="{Binding DisplayTeamScoresSinceLastItemAcquisition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <!-- /Display Team Scores -->
                
                <!-- Display Inhibitor Respawn Time -->
                
                <flat:FlatLabel Grid.Column="0"
                                Grid.Row="6"
                                Margin="0, 12, 0, 0"
                                Content="{Binding Source={x:Static resource:ViewSettingsDialogResources.LabelDisplayInhibitorRespawnTimers}}"
                                Target="{Binding ElementName=SelectDisplayInhibitorRespawnTime}" />

                <flat:FlatIconCheckBox x:Name="SelectDisplayInhibitorRespawnTime"
                                       Grid.Column="1"
                                       Grid.Row="6"
                                       Margin="12, 12, 0, 0"
                                       HorizontalAlignment="Left"
                                       DataContext="{Binding Source={x:Static local:ViewSettings.Instance}}"
                                       IsChecked="{Binding DisplayInhibitorRespawnTimers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                
                <!-- /Display Inhibitor Respawn Time -->

            </Grid>

        </flat:FlatGroupBox>

        <!-- /Gold Difference Window Settings -->

    </StackPanel>
</flat:FlatDialog>