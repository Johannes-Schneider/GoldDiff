<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:view="clr-namespace:GoldDiff.Shared.View"
                    xmlns:controlElement="clr-namespace:GoldDiff.Shared.View.ControlElement">

    <Style TargetType="{x:Type controlElement:IconButton}" x:Key="{x:Static view:GoldDiffSharedResourceKeys.DefaultIconButtonStyle}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Width" Value="45" />
        <Setter Property="Height" Value="25" />
        <Setter Property="IconSize" Value="18" />
        <Setter Property="Background" Value="{DynamicResource {x:Static view:GoldDiffSharedResourceKeys.BackgroundRegular}}" />
        <Setter Property="BackgroundWhenHovered" Value="{DynamicResource {x:Static view:GoldDiffSharedResourceKeys.ForegroundRegular}}" />
        <Setter Property="BackgroundWhenPressed" Value="{DynamicResource {x:Static view:GoldDiffSharedResourceKeys.ForegroundRegular}}" />
        <Setter Property="BackgroundWhenDisabled" Value="{DynamicResource {x:Static view:GoldDiffSharedResourceKeys.BackgroundDisabled}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static view:GoldDiffSharedResourceKeys.ForegroundRegular}}" />
        <Setter Property="ForegroundWhenHovered" Value="{DynamicResource {x:Static view:GoldDiffSharedResourceKeys.BackgroundRegular}}" />
        <Setter Property="ForegroundWhenPressed" Value="{DynamicResource {x:Static view:GoldDiffSharedResourceKeys.BackgroundLight}}" />
        <Setter Property="ForegroundWhenDisabled" Value="{DynamicResource {x:Static view:GoldDiffSharedResourceKeys.ForegroundDisabled}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controlElement:IconButton}">
                    <Border x:Name="Border"
                            Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                            BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"
                            BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}">

                        <controlElement:IconControl x:Name="Icon"
                                                    Style="{DynamicResource {x:Static view:GoldDiffSharedResourceKeys.DefaultIconControlStyle}}"
                                                    Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}"
                                                    Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"
                                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IconSize}"
                                                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IconSize}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundWhenHovered}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrushWhenHovered}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundWhenHovered}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundWhenPressed}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrushWhenPressed}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundWhenPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BackgroundWhenDisabled}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderBrushWhenDisabled}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundWhenDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>